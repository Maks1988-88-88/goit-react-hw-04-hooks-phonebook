{"version":3,"sources":["components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css"],"names":["Section","title","children","ContactForm","onSubmit","useState","number","setNumber","name","setName","handleInputChange","e","currentTarget","value","reset","preventDefault","type","pattern","required","onChange","className","s","btn","ContactList","contacts","onDelete","list","map","el","posBtn","text","onClick","id","Filter","App","setContacts","filter","setFilter","useEffect","contactsStorage","JSON","parse","localStorage","getItem","setItem","stringify","normalizeFilter","toLowerCase","filterContacts","contact","includes","wrapper","data","some","alert","nanoid","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.72af6d32.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from 'components/ContactForm/ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <button className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/ContactList/ContactList.module.css';\r\n\r\n\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ol className={s.list}>\r\n      {contacts.map(el => (\r\n        <li key={el.id}>\r\n          <p className={s.posBtn}>\r\n            <span className={s.text}>\r\n              {el.name}: {el.number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDelete(el.id)}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import s from 'components/App/App.module.css';\nimport React, { useState, useEffect } from 'react';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { nanoid } from 'nanoid';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contactsStorage = JSON.parse(localStorage.getItem('contacts'));\n    if (contactsStorage) {\n      setContacts(contactsStorage);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = data => {\n    if (contacts.some(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      const contact = {\n        id: nanoid(10),\n        name: data.name,\n        number: data.number,\n      };\n      setContacts([contact, ...contacts]);\n    }\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const normalizeFilter = filter.toLowerCase();\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter),\n  );\n\n  return (\n    <div className={s.wrapper}>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={formSubmitHandler} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList contacts={filterContacts} onDelete={deleteContact} />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__21POk\",\"text\":\"ContactList_text__PjTps\",\"btn\":\"ContactList_btn__H7ZOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__bzTHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactForm_btn__hkOsx\"};"],"sourceRoot":""}